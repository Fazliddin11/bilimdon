{"remainingRequest":"C:\\togo\\bilimdon\\ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\togo\\bilimdon\\ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\togo\\bilimdon\\ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\togo\\bilimdon\\ui\\src\\views\\main.vue?vue&type=template&id=c9a65f5a&scoped=true&","dependencies":[{"path":"C:\\togo\\bilimdon\\ui\\src\\views\\main.vue","mtime":1641833949898},{"path":"C:\\togo\\bilimdon\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\togo\\bilimdon\\ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\togo\\bilimdon\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\togo\\bilimdon\\ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}